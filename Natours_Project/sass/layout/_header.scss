/* BEM: Block Element Modifier
BEM is a class naming convention that is used to write easily understandable code

Block: Standalone component that is meaningful on its own
Element: part of a block that has no standalone meaning
Modifier: A different version of a block or an element

.block {}
.block__element {}
.block__element--modifier {}

*/

.header {
    /* 95% of viewport height */
    height: 85vh;
    /* linear gradient: fades 2 colors together
     based on direction specifisity */
     /* can use multiple backgrounds */
    background-image: 
    linear-gradient(
        to right bottom,  
        rgba($color-primary-light, 0.8), 
        rgba($color-primary, 0.8)
    ), 
    url(../img/hero-small.jpg);
    /* fits img element to viewport */
    background-size: cover;
    /* top of img stays at the to of its container
    no matter the viewport size*/
    background-position: top;
    /* used to crop visible sections of container
    polygon(): specify corner quardinates */
    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        height: 95vh;
    }

    // change image based or resolution and width
    @media 
    only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), // for safari
    only screen and (min-width: 125em) { // 600px, 2000px
        background-image: 
        linear-gradient(
            to right bottom,  
            rgba($color-primary-light, 0.8), 
            rgba($color-primary, 0.8)
        ), 
        url(../img/hero.jpg);
    }

    @include respond(phone) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    /* origin reference for logo-box */
    position: relative;

    &__logo {
        height: 3.5rem;
    }

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__text-box {
        /* center to page */
        position: absolute;
        /* in relation to parent element */
        top: 40%;
        left: 50%;
        /*  in relation to element itself */
        transform: translate(-50%, -50%);
        text-align: center;
    }
    
}
